<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:vw="clr-namespace:PDYS.Views"
                    mc:Ignorable="d">

    <SolidColorBrush x:Key="OutsideFontColor" Color="#FF000000" />
    <SolidColorBrush x:Key="DarkFontColor" Color="#FF042271" />
    <SolidColorBrush x:Key="LightFontColor" Color="#6D929B" />

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFFFFFFF" />
        <GradientStop Offset="0.521" Color="#FF8AAEDA" />
        <GradientStop Offset="0.194" Color="#FFC6D6EC" />
        <GradientStop Offset="0.811" Color="#FFB4C9E5" />
        <GradientStop Offset="0.507" Color="#FFB7C8E0" />
        <GradientStop Offset="1" Color="#FFD1DEF0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalBorderBrush" Color="#ACD1E9" />
    <SolidColorBrush x:Key="TextControlBorderBrush" Color="#ACD1E9" />

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#F5FAFA</Color>



    <LinearGradientBrush x:Key="NormalBackroundBrush" StartPoint="0.056,0.5" EndPoint="1.204,0.5">
        <GradientStop Offset="1" Color="#FFFFFFFF" />
        <GradientStop Offset="0" Color="#FFADC7DE" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HeaderFontColor" Color="#15428b" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="NormalHighlightBrush" Color="#FFFFFFFF" />

    <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFFFFFFF" />
        <GradientStop Offset="0.318" Color="#FFFEF3B5" />
        <GradientStop Offset="0.488" Color="#FFFFEB70" />
        <GradientStop Offset="0.502" Color="#FFFFD02E" />
        <GradientStop Offset="0.834" Color="#FFFFD932" />
        <GradientStop Offset="1" Color="#FFFFF48B" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFEEE8CF" />
        <GradientStop Offset="0.536" Color="#FFC4AF8C" />
        <GradientStop Offset="1" Color="#FFDCD1BF" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverHighlightBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFFFFFFB" />
        <GradientStop Offset="1" Color="#FFFEF3B5" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFC3BCAE" />
        <GradientStop Offset="0.046" Color="#FFFDCE9D" />
        <GradientStop Offset="0.452" Color="#FFFFA35B" />
        <GradientStop Offset="0.461" Color="#FFFF8A2C" />
        <GradientStop Offset="0.724" Color="#FFFF9F30" />
        <GradientStop Offset="1" Color="#FFFFC472" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FF8E8165" />
        <GradientStop Offset="1" Color="#FFC3BCAE" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedHighlightBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0.665" Color="#FFFFFFFF" />
        <GradientStop Offset="0" Color="#FFC3BCAE" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#A5FFFFFF" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#66FFFFFF" />
    <SolidColorBrush x:Key="FocusBrush" Color="#FFE99862" />

    <LinearGradientBrush x:Key="ControlBackgroundBrush" StartPoint="0.056,0.5" EndPoint="1.204,0.5">
        <GradientStop Offset="0" Color="#FFFFFFFF" />
        <GradientStop Offset="1" Color="WhiteSmoke" />
        <!--  "#FFD4D7DB"  -->
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ControlBorderBrush" Color="#FFB1703C" />

    <SolidColorBrush x:Key="GlyphBrush" Color="#FF527DB5" />
    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                                   Stroke="#60000000"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ListItem Brushes  -->

    <LinearGradientBrush x:Key="ListItemSelectedBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0.046" Color="#FFFFFFFF" />
        <GradientStop Offset="0.194" Color="#FFD7E0EA" />
        <GradientStop Offset="0.507" Color="#FFBCC5D5" />
        <GradientStop Offset="0.521" Color="#FFA4ADBB" />
        <GradientStop Offset="0.811" Color="#FFBAC1CF" />
        <GradientStop Offset="0.982" Color="#FFE3E4E6" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBorderBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#FF8B8B8B" />
        <GradientStop Offset="1" Color="#FFADADAD" />
    </LinearGradientBrush>


    <!--  Error Template  -->
    <ControlTemplate x:Key="DefaultErrorTemplate">
        <Grid x:Name="container">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <AdornedElementPlaceholder Name="customAdorner"
                                       Grid.Column="0"
                                       VerticalAlignment="Center" />

            <!--  Uyarı İşareti  -->

            <Border x:Name="ValidationErrorElement"
                    BorderBrush="#FFDB000C"
                    BorderThickness="1"
                    CornerRadius="1"
                    ToolTip="{Binding ElementName=customAdorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <Grid Width="12"
                      Height="12"
                      Margin="1,-4,-4,0"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Background="Transparent">
                    <Path Margin="1,3,0,0"
                          Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                          Fill="#FFDC000C" />
                    <Path Margin="1,3,0,0"
                          Data="M 0,0 L2,0 L 8,6 L8,8"
                          Fill="#ffffff" />
                </Grid>
            </Border>

        </Grid>
    </ControlTemplate>

    <!--  DatePicker Style  -->
    <Style TargetType="{x:Type DatePicker}">
        <!--  Error Template  -->
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="False">
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DefaultErrorTemplate}" />
        <!--  Error Template  -->
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="3" />

    </Style>

    <!--  TextBox Style  -->
    <Style TargetType="{x:Type TextBox}">
        <!--  Error Template  -->
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="false">
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DefaultErrorTemplate}" />
        <!--  Error Template  -->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource TextControlBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource TextBoxTemplate}" />
    </Style>

    <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="Over"
                                 Storyboard.TargetProperty="Opacity"
                                 To="1" />
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="Over_Border"
                                 Storyboard.TargetProperty="Opacity"
                                 To="1" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="Over"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="Over_Border"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DisabledOn">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="DisabledVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DisabledOff">
                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="DisabledVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Collapsed}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="BorderBase"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2.75" />
            <Border x:Name="Over"
                    BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2.75"
                    Opacity="0" />
            <Border x:Name="Over_Border"
                    Margin="-1"
                    BorderBrush="{DynamicResource MouseOverHighlightBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3.75"
                    IsHitTestVisible="False"
                    Opacity="0" />


            <Border x:Name="DisabledVisualElement"
                    Background="#EBEBED"
                    BorderBrush="#59C0C0C0"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2.75"
                    IsHitTestVisible="False"
                    Visibility="Collapsed" />
            <Border x:Name="ReadOnlyVisualElement"
                    Background="#66FFFFFF"
                    CornerRadius="2.75"
                    Visibility="Collapsed" />
            <Border x:Name="FocusVisualElement"
                    Background="#FCFFC7"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2.75"
                    IsHitTestVisible="False"
                    Opacity="0" />

            <ScrollViewer x:Name="PART_ContentHost"
                          Margin="0"
                          Foreground="{DynamicResource OutsideFontColor}" />

            <!--  Disabled Org Color : #A5FFFFFF  -->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </MultiTrigger.ExitActions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="DisabledOn_BeginStoryboard" Storyboard="{StaticResource DisabledOn}" />
                </Trigger.EnterActions>

                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource DisabledOff}" />
                </Trigger.EnterActions>
                <Setter Property="Foreground" Value="#FF000000" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF15428B" />
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="6,0,4,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Border x:Name="Background"
                                BorderThickness="1"
                                Padding="0">

                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite"
                                              MinWidth="0"
                                              MinHeight="0"
                                              Margin="1,1,1,0"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              DockPanel.Dock="Top"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding Path=IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="{TemplateBinding Padding}"
                                              Style="{StaticResource ExpanderDownHeaderStyle}" />
                                <Border x:Name="border"
                                        Margin="1,1,1,1"
                                        Background="{DynamicResource ControlBackgroundBrush}"
                                        BorderBrush="{DynamicResource GlyphBrush}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="1,1,1,1"
                                        Visibility="Collapsed">
                                    <ContentPresenter x:Name="ExpandSite"
                                                      Margin="1,1,1,1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      DockPanel.Dock="Bottom"
                                                      Focusable="false" />
                                </Border>
                            </DockPanel>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource DisabledBackgroundBrush}"
                                BorderBrush="{DynamicResource DisabledBorderBrush}"
                                BorderThickness="1"
                                IsHitTestVisible="false"
                                Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="border" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" />
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="rectangleOver"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0.8" />
                <ColorAnimation Duration="00:00:00.1000000"
                                Storyboard.TargetName="Background"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="#FFFFFFFF" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="rectangleOver"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
                <ColorAnimation Duration="00:00:00.4000000"
                                Storyboard.TargetName="Background"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="#FFEAF2FB" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="rectanglePress"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0.8" />
                <ColorAnimation Duration="00:00:00.1000000"
                                Storyboard.TargetName="Background"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="#FFFFFFFF" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="rectanglePress"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
                <ColorAnimation Duration="00:00:00.4000000"
                                Storyboard.TargetName="Background"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="#FFEAF2FB" />
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="BackgroundChecked"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="BackgroundChecked"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Rectangle x:Name="Background"
                       Fill="#FFEAF2FB"
                       IsHitTestVisible="false"
                       Stroke="#FF9EBBDE" />
            <Rectangle x:Name="BackgroundChecked"
                       Margin="1"
                       IsHitTestVisible="false"
                       Opacity="0">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle x:Name="rectangleOver"
                       Width="15"
                       HorizontalAlignment="Right"
                       Fill="{DynamicResource MouseOverBrush}"
                       Opacity="0"
                       Stroke="#FFE8E8E8" />
            <Rectangle x:Name="rectanglePress"
                       Width="15"
                       HorizontalAlignment="Right"
                       Fill="{DynamicResource PressedBrush}"
                       Opacity="0"
                       Stroke="#FC9E9D9B" />
            <Rectangle x:Name="DisabledVisualElement"
                       Margin="1"
                       Fill="{DynamicResource DisabledBackgroundBrush}"
                       IsHitTestVisible="false"
                       Visibility="Collapsed" />
            <Path x:Name="BtnArrow"
                  Width="6"
                  Margin="0,0,4,0"
                  HorizontalAlignment="Right"
                  Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                  Fill="{DynamicResource GlyphBrush}"
                  Stretch="Uniform" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
    </ControlTemplate>



    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <ToggleButton x:Name="ToggleButton"
                          Grid.Column="2"
                          ClickMode="Press"
                          Focusable="false"
                          IsChecked="{Binding Path=IsDropDownOpen,
                                              Mode=TwoWay,
                                              RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{DynamicResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="ContentSite"
                              Margin="3,3,23,3"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="False" />

            <TextBox x:Name="PART_EditableTextBox"
                     Margin="3,3,23,3"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Background="Transparent"
                     Focusable="True"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Style="{x:Null}"
                     Template="{DynamicResource ComboBoxTextBox}"
                     Visibility="Hidden" />
            <Rectangle x:Name="DisabledVisualElement"
                       Fill="{DynamicResource DisabledBackgroundBrush}"
                       IsHitTestVisible="false"
                       Opacity="0"
                       RadiusX="0"
                       RadiusY="0"
                       Stroke="{DynamicResource DisabledBorderBrush}" />
            <Rectangle x:Name="FocusVisualElement"
                       Margin="-1"
                       IsHitTestVisible="false"
                       Opacity="0"
                       Stroke="{DynamicResource FocusBrush}"
                       StrokeThickness="1" />
            <Popup x:Name="Popup"
                   Margin="0,1,0,0"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="Slide">
                <Grid x:Name="DropDown"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder"
                            Margin="0,-1,0,0"
                            Background="{DynamicResource ControlBackgroundBrush}"
                            BorderBrush="{DynamicResource ControlBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="0,0,3,3">
                        <ScrollViewer Margin="4,6,4,6"
                                      CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Auto"
                                      SnapsToDevicePixels="True"
                                      VerticalScrollBarVisibility="Auto">

                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">
        <!--  Error Template  -->
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="false">
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource DefaultErrorTemplate}" />
        <!--  Error Template  -->
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="DisplayMemberPath" Value="DisplayName" />

        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
    </Style>


    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource DarkFontColor}" />
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource DarkFontColor}" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border"
                                BorderBrush="{DynamicResource NormalBorderBrush}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="3">

                            <ScrollViewer Margin="1"
                                          Focusable="false"
                                          Foreground="{TemplateBinding Foreground}">

                                <StackPanel Margin="2" IsItemsHost="true" />

                            </ScrollViewer>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                Background="#A5FFFFFF"
                                BorderBrush="#66FFFFFF"
                                BorderThickness="1"
                                IsHitTestVisible="false"
                                Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Foreground" Value="{DynamicResource DarkFontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000"
                                             Storyboard.TargetName="BackgroundGradientOver"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.73" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.4000000"
                                             Storyboard.TargetName="BackgroundGradientOver"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000"
                                             Storyboard.TargetName="BackgroundGradientSelected"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.84" />
                            <DoubleAnimation Duration="00:00:00.1000000"
                                             Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.55" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000"
                                             Storyboard.TargetName="BackgroundGradientSelected"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                            <DoubleAnimation Duration="00:00:00.4000000"
                                             Storyboard.TargetName="BackgroundGradientSelectedDisabled"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle x:Name="BackgroundGradientOver"
                                   Fill="{DynamicResource MouseOverBrush}"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{DynamicResource MouseOverBorderBrush}" />
                        <Rectangle x:Name="BackgroundGradientSelectedDisabled"
                                   Fill="{DynamicResource ListItemSelectedBrush}"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{DynamicResource ListItemSelectedBorderBrush}" />
                        <Rectangle x:Name="BackgroundGradientSelected"
                                   Fill="{DynamicResource PressedBrush}"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="{DynamicResource PressedBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button Style  -->
    <Style BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="3" />

        <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="BackgroundOver"
                                 Storyboard.TargetProperty="Opacity"
                                 To="1" />
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="BackgroundOver_Highlight"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0.65" />
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="BackgroundOver"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="BackgroundOver_Highlight"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="BackgroundPressed"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0.84" />
                <DoubleAnimation Duration="00:00:00.1000000"
                                 Storyboard.TargetName="BackgoundPressed_Highlight"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0.65" />
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="BackgroundPressed"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
                <DoubleAnimation Duration="00:00:00.4000000"
                                 Storyboard.TargetName="BackgoundPressed_Highlight"
                                 Storyboard.TargetProperty="Opacity"
                                 To="0" />
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="FocusVisualElement"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="BackgroundNorm"
                    Background="{DynamicResource NormalBrush}"
                    BorderBrush="{DynamicResource NormalBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="1.75" />
            <Border x:Name="BackgroundNorm_highlight"
                    Margin="1"
                    BorderBrush="{DynamicResource NormalHighlightBrush}"
                    BorderThickness="1,0,1,1"
                    CornerRadius="1"
                    Opacity="0.65" />
            <Border x:Name="BackgroundOver"
                    Background="{DynamicResource MouseOverBrush}"
                    BorderBrush="{DynamicResource MouseOverBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="1.75"
                    Opacity="0" />
            <Border x:Name="BackgroundOver_Highlight"
                    Margin="1"
                    BorderBrush="{DynamicResource MouseOverHighlightBrush}"
                    BorderThickness="1,0,1,1"
                    CornerRadius="1"
                    Opacity="0" />
            <Border x:Name="BackgroundPressed"
                    Background="{DynamicResource PressedBrush}"
                    BorderBrush="{DynamicResource PressedBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="1.75"
                    Opacity="0" />
            <Border x:Name="BackgoundPressed_Highlight"
                    Margin="1"
                    BorderBrush="{DynamicResource PressedHighlightBrush}"
                    BorderThickness="1,0,1,1"
                    CornerRadius="1"
                    Opacity="0" />
            <Border x:Name="DisabledVisualElement"
                    Background="{DynamicResource DisabledBackgroundBrush}"
                    BorderBrush="{DynamicResource DisabledBorderBrush}"
                    BorderThickness="1"
                    IsHitTestVisible="false"
                    Opacity="0" />

            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
            <TextBlock x:Name="DisabledOverlay"
                       Margin="{TemplateBinding Padding}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Panel.ZIndex="1"
                       Foreground="#FF8E96A2"
                       Text="{TemplateBinding Content}"
                       Visibility="Collapsed" />
            <Border x:Name="FocusVisualElement"
                    Margin="-1"
                    BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="1"
                    CornerRadius="2.75"
                    IsHitTestVisible="false"
                    Opacity="0" />
            <Border x:Name="DefaultBorder"
                    Margin="-1"
                    BorderBrush="{DynamicResource FocusBrush}"
                    BorderThickness="1"
                    CornerRadius="2.75"
                    IsHitTestVisible="false"
                    Opacity="0" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter TargetName="DefaultBorder" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">

                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="DisabledOverlay" Property="Visibility" Value="{x:Static Visibility.Visible}" />
                <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="{x:Static Visibility.Visible}" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DarkFontColor}" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="10,5,10,5" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />


    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <!--  <Setter Property="Foreground" Value="#FF042271" /> 6D929B  -->
        <Setter Property="Foreground" Value="{StaticResource DarkFontColor}" />
        <Setter Property="Padding" Value="0,5,0,0" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <!--  <Setter Property="FontFamily" Value="Tahoma" />  -->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,1"
                                CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource MainColor}" />
                                </Border.BorderBrush>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource MainColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>

                        <Border Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4" />

                        <Border x:Name="Header"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="2"
                                Padding="7,3,7,3">

                            <ContentPresenter ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.FontWeight="Light" />

                        </Border>

                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid Header  -->

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <!--  <Setter Property="Background" Value="{DynamicResource NormalBrush}" />  -->

        <Setter Property="Foreground" Value="{StaticResource DarkFontColor}" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>


    <!--  Gris Style  -->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="RowBackground" Value="#FFFFFF" />
        <Setter Property="AlternatingRowBackground" Value="#EBEBED" />
        <Setter Property="RowHeight" Value="20" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="SelectedItem" Value="{Binding SelectedItem, Mode=TwoWay}" />
    </Style>


</ResourceDictionary>